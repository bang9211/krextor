####################################################################################
# build config -- 다음과 같은 환경값이 정의 되어야 한다.
#
# TARGETS = 생성될 대상 파일들 (binary or library)
# SUBDIRS = 컴파일 해야할 하위 디렉토리 지정
# DEPEND_SOURCES = dependency를 생성할 파일들을 지정한다.
# INSTALL_COMMAND = install 할 때 사용할 command
# OBJ_DIR = OBJECT 파일을 생성할  DIRECTORY 기본값은 "$currentdir/.obj/" 이다.
# SUB_OBJ_DIRS = OBJECT DIRECTORY 하위에 파일들을 생성하고 싶을 때 
####################################################################################

COBJS=$(CSRCS:%.c=$(OBJ_DIR)%.o)
CXXOBJS=$(CXXSRCS:%.cpp=$(OBJ_DIR)%.o)

$(OBJ_DIR)%.o : %.c
	$(CC) $(CPPFLAGS) $(CFLAGS) $(CINCLUDE) -c $(call get_cur_dir)/$(<) -o $@

$(OBJ_DIR)%.o : %.cpp
	$(CXX) $(CXXCPPFLAGS) $(CXXFLAGS) $(CXXINCLUDE) -c $(call get_cur_dir)/$(<) -o $@


all     : all-recursive
install : install-recursive
depend  : depend-recursive
clean   : clean-recursive


all-recursive install-recursive depend-recursive clean-recursive :
	@otarget=`echo $@| sed s/-recursive//`;\
	list='$(SUBDIRS)'; \
	for i in $$list; do \
		if test -d "$$i"; then \
			target="$$otarget"; \
			echo "Making $$target in $$i"; \
			if test "$$i" = "."; then \
				made_local=yes; \
				target="local-$$target"; \
			fi; \
			(cd $$i && $(MAKE) $$target) || exit 1; \
		fi; \
	done; \
	if test "$$otarget" = "all" && test -z '$(TARGETS)'; then \
		made_local=yes; \
	fi; \
	if test "$$made_local" != "yes"; then  \
		$(MAKE) "local-$$otarget" || exit 1; \
	fi


local-all : make_obj_dir $(TARGETS)


local-depend :
	@if test -n "`ls *.c *.cpp *.cc 2> /dev/null`"; then \
		$(RM) $(DEPEND_FILE) ; \
		list='$(DEPEND_SOURCES)'; \
		for i in $$list; do \
			echo "$$i" ; \
			if test -f "$$i"; then \
				rslt=`$(DEPEND_COMMAND) "$$i"`; \
				echo "$(OBJ_DIR)$$rslt" >> $(DEPEND_FILE) ; \
			fi; \
		done; \
	fi


local-clean :
	$(RM) *.o *.a *.so *.sl $(TARGETS) $(OBJ_DIR)

#local-install :
#	$(INSTALL_COMMAND)

make_obj_dir :
	@objdir='$(OBJ_DIR)'; \
	if test -d "$$objdir"; then :; else \
		echo "CREATE DIRECTORY : $$objdir"; \
		mkdir "$$objdir"; \
	fi;\
	list='$(SUB_OBJ_DIRS)'; \
	for subdir in $$list; do \
		if test -d "$$objdir$$subdir"; then :; else \
			echo "CREATE DIRECTORY : $$objdir$$subdir"; \
			mkdir "$$objdir$$subdir"; \
		fi; \
	done;



